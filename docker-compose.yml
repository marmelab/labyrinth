version: '3.8'

services:
  postgres:
    image: postgres:15.2-alpine
    env_file:
      - webapp/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./data/postgres:/data/postgres

  mercure:
    image: dunglas/mercure:v0.14
    env_file:
      - webapp/.env
    command: /usr/bin/caddy run --config /etc/caddy/Caddyfile.dev
    environment:
      - SERVER_NAME=":80"

  webapp:
    env_file:
      - webapp/.env
    environment:
      - DOMAIN_SERVICE_URL=http://api-domain:80
      - MERCURE_URL=http://mercure:80/.well-known/mercure
      - MERCURE_PUBLIC_URL=/.well-known/mercure
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/labyrinth?serverVersion=15&charset=utf8
    volumes:
      - ./webapp/config/jwt:/var/www/labyrinth/config/jwt

  webapp-migrations:
    env_file:
      - webapp/.env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/labyrinth?serverVersion=15&charset=utf8
    depends_on:
      - postgres

  postgrest:
    image: postgrest/postgrest
    environment:
      PGRST_DB_URI: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/labyrinth
      PGRST_JWT_SECRET: "@/jwk/jwk.pub"
    depends_on:
      - postgres
    volumes:
      - ./webapp/config/jwt/jwk.pub:/jwk/jwk.pub

  admin-proxy:
    environment:
      - POSTGREST_URL=http://postgrest:3000
    depends_on:
      - postgrest

  proxy:
    volumes:
      - ./certs:/certs
      - ./logs:/var/log/nginx
    depends_on:
      - admin-proxy
      - webapp
      - mercure
