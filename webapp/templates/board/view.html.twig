{% extends "base.html.twig" %}

{% block title %}Labyrinth Game #{{ board.id }}{% endblock %}

{% block body %}
	<div class="game">
		{% if app.session.flashbag.peek('errors')|length > 0 %}
			{% for message in app.flashes('errors') %}
				<div class="alert alert-danger">
					{{ message }}
				</div>
			{% endfor %}
		{% endif %}
		
		<div class="game__actions game__actions--top">
			{% include "board/components/insert_tile.html.twig" with {
				"actionUrl": url("board_insert_tile_top", { "id": board.id }),
				"label": "↓",
			} %}
		</div>

		<div class="game__row">
			<div class="game__actions game__actions--left">
				{% include "board/components/insert_tile.html.twig" with {
					"actionUrl": url("board_insert_tile_left", { "id": board.id }),
					"label": "→",
				} %}
			</div>

			<div class="board">
				{% for line, lineTiles in board.state.tiles %}
					{% for row, boardTile in lineTiles %}
						{% include "board/components/tile.html.twig" with {
							"line": line,
							"row": row,
							"tile": boardTile.tile,
							"rotation": boardTile.rotation,
						} %}
					{% endfor %}
				{% endfor %}
			</div>

			<div class="game__actions game__actions--right">
				{% include "board/components/insert_tile.html.twig" with {
					"actionUrl": url("board_insert_tile_right", { "id": board.id }),
					"label": "←",
				} %}
			</div>

			<div class="scores">
				<div class="scores__row scores__row--actions">
					{% include "board/components/rotate_remaining.html.twig" with {
						"actionUrl": url("board_rotate_remaining_anticlockwise", { "id": board.id }),
						"label": "↶",
					} %}

					<div class="tile">
						{% set remainingTile = board.state.remainingTile %}
						{% set tile = remainingTile.tile %}
						<div class="tile__content tile--remaining tile--shape-{{ tile.shape }} tile--rotation-{{ remainingTile.rotation }} {% if board.user and board.user.currentTarget == tile.treasure %}tile--target{% endif %}">
							<div class="emoji">
								{{ emojis[tile.treasure] }}
							</div>
						</div>
					</div>

					{% include "board/components/rotate_remaining.html.twig" with {
						"actionUrl": url("board_rotate_remaining_clockwise", { "id": board.id }),
						"label": "↷",
					} %}
				</div>

				{% if board.canPlay and board.gameState != 2 %}
				<div class="alert alert-success">
					Your Turn, you can:
					{% if board.gameState == 0 %}
						Place Tile.
					{% elseif board.gameState == 1 %}
						Move Pawn.
					{% endif %}
				</div>
				{% endif %}

				{% if board.user %}
				<div class="scores__row">
					<div class="scores__row__label">
						Your Color
					</div>

					<div class="scores__row__value">
						{{ colors[board.user.color] }}
					</div>
				</div>
					
				<div class="scores__row">
					<div class="scores__row__label">
						Your Target
					</div>

					<div class="scores__row__value">
						{{ emojis[board.user.currentTarget] }}
					</div>
				</div>
				{% endif %}

				<div class="scores__row scores__row--heading">
					<div class="scores__row__label">
						Waiting Player
					</div>

					<div class="scores__row__value">
						{{ board.currentPlayer.name }}
					</div>
				</div>

				<div class="scores__row">
					<div class="scores__row__label">
						Player Color
					</div>

					<div class="scores__row__value">
						{{ colors[board.currentPlayer.color] }}
					</div>
				</div>

				<div class="scores__row scores__row--heading">
					<div class="scores__row__label">
						Player Scores
					</div>
				</div>

				{% for player in board.players %}
					<div class="scores__row">
						<div class="scores__row__label">
							{{ player.name }}
						</div>

						<div class="scores__row__value">
							{{ player.score  }} / {{ player.totalTargets }}
						</div>
					</div>
				{% endfor %}
			</div>
		</div>

		<div class="game__actions game__actions--bottom">
			{% include "board/components/insert_tile.html.twig" with {
				"actionUrl": url("board_insert_tile_bottom", { "id": board.id }),
				"label": "↑",
			} %}
		</div>
	</div>

{% endblock %}

{% block javascripts %}

{% if not board.canPlay %}
<script defer>
const eventSource = new EventSource("{{ mercure(url('board_view', { 'id': board.id }))|escape('js') }}");
eventSource.onmessage = event => {
    window.location.reload();
}
</script>
{% endif %}

{% if board.gameState == 2 %}
<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>
<script defer>
	confetti({
		particleCount: 1000,
		spread: 500,
		origin: { y: 0.6 }
	});
</script>
{% endif %}
{% endblock %}