user                       nginx;
worker_processes           1;

error_log                  /var/log/nginx/error.log warn;
pid                        /var/run/nginx.pid;

events {
    worker_connections     1024;
}


http {
    include                /etc/nginx/mime.types;
    default_type           application/octet-stream;
    
    log_format             main  '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
    access_log             /var/log/nginx/access.log main;
    
    sendfile               on;
    keepalive_timeout      65;
    server_tokens          on;

    map $http_user_agent $is_mobile {
        default 0;
        ~*linux.*android|iphone|ipod|ipad|windows\s+(?:ce|phone) 1;
    }

    map $is_mobile $root {
        0 'webapp';
        1 'mobile';
    }

    map $is_mobile $endpoint {
        0 @webapp;
        1 @mobile;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen                  443 ssl;
        server_name             localhost;
        
        ssl_certificate         /certs/server.crt;
        ssl_certificate_key     /certs/server.key;
        ssl_protocols           TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers             HIGH:!aNULL:!MD5;

        root /var/www/labyrinth/${root};

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            break;
        }
            
        location /.well-known/mercure {
            proxy_pass http://mercure:80;
            proxy_read_timeout 24h;
            proxy_set_header Connection "";
            proxy_connect_timeout 300s;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /admin/api/v1 {
            proxy_pass http://postgrest:3000/;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            
            break;
        }

        location /admin {
            root /var/www/labyrinth/admin;
            try_files $uri @admin;
            break;
        }

        location /api {
            try_files $uri @webapp;
            break;
        }

        location / {
            try_files $uri $endpoint;
        }

        location @admin {
            proxy_pass http://admin:5173;
            proxy_connect_timeout 300s;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            break;
        }

        location @mobile {
            proxy_pass http://mobile:5173;
            proxy_connect_timeout 300s;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            break;
        }

        location @webapp {
            rewrite ^(.*)$ /index.php/$1 last;
        }

        location ~ ^/index\.php(/|$) {
            fastcgi_pass webapp:9000;

            fastcgi_split_path_info ^(.+\.php)(/.*)$;
            include fastcgi_params;

            fastcgi_param SCRIPT_FILENAME   index.php;
            fastcgi_param DOCUMENT_ROOT     /var/www/labyrinth/public;

            internal;
        }

        location ~ \.php$ {
            return 404;
        }

        access_log  /var/log/nginx/labyrinth_access.log;
        error_log   /var/log/nginx/labyrinth_error.log debug;
    }
}